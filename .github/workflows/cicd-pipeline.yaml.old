name: Screen4_CICD_Pipeline
on: [push]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
  ARTIFACT_NAME: drop
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  IMAGE_NAME: screen.processfunction
  REGISTRY: stevenjiangnz

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: test_run
        run: |
          echo "Hello World" 

      - name: Login to Docker Hub
        run: docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
  

      - name: ACR - Build and push Docker image
        working-directory: ${{ env.working-directory }}
        run: |
          cd ./resources/deploy
          bash build.sh ${{ env.IMAGE_NAME}}

          docker image tag ${{ env.IMAGE_NAME}} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:latest
          docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:latest

# Publish new image to ACR
  Publish:
    name: Publish new image to ACR
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: [ '6.0']
      
    steps:
      - name: Setup dotnet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0 

      # Get the existing and next sematic version
      - name: Get Version
        id: version
        shell: bash
        run: |
          export VERSION=$(docker run -v $(pwd):/repo codacy/git-version /bin/git-version \
            --folder /repo \
            --release-branch main)

          echo "::set-output name=new-version::$VERSION"
          echo "New Version: $VERSION"
      
      # Create a release and tag in github
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ steps.version.outputs.new-version }}
          release_name: Release ${{ steps.version.outputs.new-version }}
          body: |
            Changes in this Release
            - First Change Place Holder
            - Second Change Placeholder
          draft: false
          prerelease: false

      - name: Login to Docker Hub
        run: docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD

      - name: ACR - Build and push Docker image
        working-directory: ${{ env.working-directory }}
        run: |

          cd ./resources/deploy
          bash build.sh ${{ env.IMAGE_NAME}}
  
          docker image tag ${{ env.IMAGE_NAME}} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ steps.version.outputs.new-version }}
          docker image push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ steps.version.outputs.new-version }}
